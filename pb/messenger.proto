syntax = "proto3";

package saastack.messenger.v1;

option go_package = "pb";

import "annotations/annotations.proto";
import "crudgen/crudgen.proto";
import "eventspush/push.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "pehredaar/pehredaar.proto";
import "schema/schema.proto";
import "types/enums.proto";
import "types/types.proto";
import "validate/chaku.proto";
import "validate/validate.proto";


// InstagramService handles Instagram integration and chatbot operations
service MessengerService {
  // Auth related endpoints
  rpc GetAuthURL(GetAuthURLRequest) returns (GetAuthURLResponse);
  rpc HandleOAuthCallback(HandleOAuthCallbackRequest) returns (HandleOAuthCallbackResponse);

  // Webhook related endpoints
  rpc HandleWebhook(HandleWebhookRequest) returns (google.protobuf.Empty);
  rpc VerifyWebhook(VerifyWebhookRequest) returns (VerifyWebhookResponse);

  // User management
  rpc GetUserConnection(GetUserConnectionRequest) returns (InstagramConnection);
  rpc DisconnectUser(DisconnectUserRequest) returns (google.protobuf.Empty);
  rpc ListConnections(ListConnectionsRequest) returns (ListConnectionsResponse);

  // Message management
  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
  rpc GetMessageHistory(GetMessageHistoryRequest) returns (GetMessageHistoryResponse);
}

// Auth related messages
message GetAuthURLRequest {
  string redirect_uri = 1;
  repeated string scopes = 2;
  string state = 3;
}

message GetAuthURLResponse {
  string auth_url = 1;
  string state = 2;
}

message HandleOAuthCallbackRequest {
  string code = 1;
  string state = 2;
}

message HandleOAuthCallbackResponse {
  InstagramConnection connection = 1;
}

// Webhook related messages
message HandleWebhookRequest {
  repeated WebhookEntry entries = 1;
}

message VerifyWebhookRequest {
  string mode = 1;
  string verify_token = 2;
  string challenge = 3;
}

message VerifyWebhookResponse {
  string challenge = 1;
}

// User management messages
message GetUserConnectionRequest {
  string instagram_id = 1;
}

message DisconnectUserRequest {
  string instagram_id = 1;
}

message ListConnectionsRequest {
  int32 page_size = 1;
  string page_token = 2;
}

message ListConnectionsResponse {
  repeated MessengerConnection connections = 1;
  string next_page_token = 2;
  int32 total_size = 3;
}

// Message management messages
message SendMessageRequest {
  string instagram_id = 1;
  string message_text = 2;
  MessageType message_type = 3;
}

message SendMessageResponse {
  string message_id = 1;
  google.protobuf.Timestamp sent_at = 2;
}

message GetMessageHistoryRequest {
  string instagram_id = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  int32 page_size = 4;
  string page_token = 5;
}

message GetMessageHistoryResponse {
  repeated Message messages = 1;
  string next_page_token = 2;
  int32 total_size = 3;
}

// Common types
enum MessageType {
  MESSAGE_TYPE_UNSPECIFIED = 0;
  MESSAGE_TYPE_TEXT = 1;
  MESSAGE_TYPE_QUICK_REPLY = 2;
  MESSAGE_TYPE_TEMPLATE = 3;
}

enum ConnectionStatus {
  CONNECTION_STATUS_UNSPECIFIED = 0;
  CONNECTION_STATUS_ACTIVE = 1;
  CONNECTION_STATUS_EXPIRED = 2;
  CONNECTION_STATUS_REVOKED = 3;
}

message MessengerConnection {
  option (chaku.root) = true;
  option (chaku.limit_multiplier) = 100;
  // Prefix will be either instMes, fbMes or iMes

  // Parent of the ConnectedCalendarAccount Id will be the User/Group/Company
  string id = 1;
  // Accounts will be connected by the user in the company
  string user_id = 2 [(validate.rules).string.min_len = 3];
  string messenger_id = 3; //
  string company_id = 4 [(validate.rules).string.min_len = 3];
  // AccountName of the calendar
  string account_name = 5;
  string integration_id = 6 [(validate.rules).string.min_len = 3];
  saastack.types.IntegrationType integration_type = 7 [(validate.rules).enum.defined_only = true];
  // Calendars will be those Calendars in the integrated account
  map<string, string> metadata = 11;

  .google.protobuf.Timestamp created_on = 13;

}

message Message {
  string message_id = 1;
  string instagram_id = 2;
  string text = 3;
  MessageType type = 4;
  google.protobuf.Timestamp created_at = 5;
  bool is_from_user = 6;
  MessageResponse response = 7;
}

message MessageResponse {
  string response_id = 1;
  string response_text = 2;
  google.protobuf.Timestamp responded_at = 3;
  string error_message = 4;
}

message WebhookEntry {
  string id = 1;
  google.protobuf.Timestamp time = 2;
  repeated WebhookChange changes = 3;
}

message WebhookChange {
  string field = 1;
  WebhookValue value = 2;
}

message WebhookValue {
  repeated WebhookMessage messages = 1;
  string id = 2;
}

message WebhookMessage {
  WebhookUser from = 1;
  string text = 2;
  string id = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message WebhookUser {
  string id = 1;
  string username = 2;
}